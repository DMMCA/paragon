// Code generated by entc, DO NOT EDIT.

package job

import (
	"time"

	"github.com/kcarretto/paragon/ent/schema"
)

const (
	// Label holds the string label denoting the job type in the database.
	Label = "job"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldCreationTime holds the string denoting the creationtime vertex property in the database.
	FieldCreationTime = "creation_time"
	// FieldContent holds the string denoting the content vertex property in the database.
	FieldContent = "content"
	// FieldStaged holds the string denoting the staged vertex property in the database.
	FieldStaged = "staged"

	// Table holds the table name of the job in the database.
	Table = "jobs"
	// TasksTable is the table the holds the tasks relation/edge.
	TasksTable = "tasks"
	// TasksInverseTable is the table name for the Task entity.
	// It exists in this package in order to avoid circular dependency with the "task" package.
	TasksInverseTable = "tasks"
	// TasksColumn is the table column denoting the tasks relation/edge.
	TasksColumn = "job_id"
	// TagsTable is the table the holds the tags relation/edge. The primary key declared below.
	TagsTable = "job_tags"
	// TagsInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagsInverseTable = "tags"
	// PrevTable is the table the holds the prev relation/edge.
	PrevTable = "jobs"
	// PrevColumn is the table column denoting the prev relation/edge.
	PrevColumn = "prev_id"
	// NextTable is the table the holds the next relation/edge.
	NextTable = "jobs"
	// NextColumn is the table column denoting the next relation/edge.
	NextColumn = "prev_id"
	// OwnerTable is the table the holds the owner relation/edge.
	OwnerTable = "jobs"
	// OwnerInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	OwnerInverseTable = "users"
	// OwnerColumn is the table column denoting the owner relation/edge.
	OwnerColumn = "owner_id"
)

// Columns holds all SQL columns for job fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreationTime,
	FieldContent,
	FieldStaged,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Job type.
var ForeignKeys = []string{
	"prev_id",
	"owner_id",
}

var (
	// TagsPrimaryKey and TagsColumn2 are the table columns denoting the
	// primary key for the tags relation (M2M).
	TagsPrimaryKey = []string{"job_id", "tag_id"}
)

var (
	fields = schema.Job{}.Fields()

	// descName is the schema descriptor for Name field.
	descName = fields[0].Descriptor()
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator = descName.Validators[0].(func(string) error)

	// descCreationTime is the schema descriptor for CreationTime field.
	descCreationTime = fields[1].Descriptor()
	// DefaultCreationTime holds the default value on creation for the CreationTime field.
	DefaultCreationTime = descCreationTime.Default.(func() time.Time)

	// descContent is the schema descriptor for Content field.
	descContent = fields[2].Descriptor()
	// ContentValidator is a validator for the "Content" field. It is called by the builders before save.
	ContentValidator = descContent.Validators[0].(func(string) error)
)

// Code generated by entc, DO NOT EDIT.

package service

import (
	"github.com/kcarretto/paragon/ent/schema"
)

const (
	// Label holds the string label denoting the service type in the database.
	Label = "service"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name vertex property in the database.
	FieldName = "name"
	// FieldPubKey holds the string denoting the pubkey vertex property in the database.
	FieldPubKey = "pub_key"
	// FieldConfig holds the string denoting the config vertex property in the database.
	FieldConfig = "config"
	// FieldIsActivated holds the string denoting the isactivated vertex property in the database.
	FieldIsActivated = "is_activated"

	// Table holds the table name of the service in the database.
	Table = "services"
	// TagTable is the table the holds the tag relation/edge.
	TagTable = "services"
	// TagInverseTable is the table name for the Tag entity.
	// It exists in this package in order to avoid circular dependency with the "tag" package.
	TagInverseTable = "tags"
	// TagColumn is the table column denoting the tag relation/edge.
	TagColumn = "service_tag_id"
	// EventsTable is the table the holds the events relation/edge.
	EventsTable = "events"
	// EventsInverseTable is the table name for the Event entity.
	// It exists in this package in order to avoid circular dependency with the "event" package.
	EventsInverseTable = "events"
	// EventsColumn is the table column denoting the events relation/edge.
	EventsColumn = "svc_owner_id"
)

// Columns holds all SQL columns for service fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldPubKey,
	FieldConfig,
	FieldIsActivated,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Service type.
var ForeignKeys = []string{
	"service_tag_id",
}

var (
	fields = schema.Service{}.Fields()

	// descName is the schema descriptor for Name field.
	descName = fields[0].Descriptor()
	// NameValidator is a validator for the "Name" field. It is called by the builders before save.
	NameValidator = descName.Validators[0].(func(string) error)

	// descPubKey is the schema descriptor for PubKey field.
	descPubKey = fields[1].Descriptor()
	// PubKeyValidator is a validator for the "PubKey" field. It is called by the builders before save.
	PubKeyValidator = descPubKey.Validators[0].(func(string) error)

	// descConfig is the schema descriptor for Config field.
	descConfig = fields[2].Descriptor()
	// DefaultConfig holds the default value on creation for the Config field.
	DefaultConfig = descConfig.Default.(string)

	// descIsActivated is the schema descriptor for IsActivated field.
	descIsActivated = fields[3].Descriptor()
	// DefaultIsActivated holds the default value on creation for the IsActivated field.
	DefaultIsActivated = descIsActivated.Default.(bool)
)
